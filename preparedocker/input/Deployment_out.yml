---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: iviaconfigv
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iviaconfiga
  labels:
    app: iviaconfiga
spec:
  selector:
    matchLabels:
      app: iviaconfiga
  replicas: 1
  template:
    metadata:
      labels:
        app: iviaconfiga
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser:    6000
      volumes:
        - name: iviaconfigv
          persistentVolumeClaim:
            claimName: iviaconfigv
        - name: iviaconfigv-logs
          emptyDir: {}
      containers:
        - name: iviaconfigc
          image: icr.io/ivia/ivia-config:11.0.0.0
          volumeMounts:
            - mountPath: /var/shared
              name: iviaconfigv
            - mountPath: /var/application.logs
              name: iviaconfiga-logs
          env:
            - name: CONTAINER_TIMEZONE
              value: Asia/Kolkata
            - name: ADMIN_PWD
              valueFrom:
                secretKeyRef:
                  name: iviaadmin
                  key: adminpw
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: 9443
              path: /core/login
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 2
          startupProbe:
            exec:
              command:
              - /sbin/health_check.sh
            failureThreshold: 30
            periodSeconds: 10
            timeoutSeconds: 2
#          command: [ "/sbin/bootstrap.sh" ]
---
apiVersion: v1
kind: Service
metadata:
  name: iviaconfigs
spec:
# To make the LMI externally visible, make it a nodePort
#  type: NodePort
  ports:
    - port: 9443
      name: iviaconfigs
      protocol: TCP
# make this one statically allocated
#      nodePort: 30442
  selector:
    app: iviaconfiga
    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iviaruntime
  labels:
    app: iviaruntime
spec:
  selector:
    matchLabels:
      app: iviaruntime
  replicas: 1
  template:
    metadata:
      labels:
        app: iviaruntime
    spec:
      volumes:
        - name: iviaconfigv
          emptyDir: {}
        - name: iviaruntime-logs
          emptyDir: {}
      containers:
        - name: iviaruntimec
          image:  icr.io/ivia/ivia-runtime:11.0.0.0
          ports:
            - containerPort: 9443
          volumeMounts:
            - mountPath: /var/shared
              name: iviaconfigv
            - mountPath: /var/application.logs
              name: iviaruntime-logs
          env:
            - name: CONTAINER_TIMEZONE
              value: Europe/London
            - name: CONFIG_SERVICE_URL
              value: https://iviaconfigs:9443/shared_volume
            - name: CONFIG_SERVICE_USER_NAME
              value: cfgsvc
            - name: CONFIG_SERVICE_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: configreader
                  key: cfgsvcpw
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: 9443
              path: /sps/static/ibm-logo.png
            periodSeconds: 10
            failureThreshold: 2
            timeoutSeconds: 2
          startupProbe:
            exec:
              command:
              - /sbin/health_check.sh
            failureThreshold: 30
            periodSeconds: 10
            timeoutSeconds: 2
      imagePullSecrets:
        - name: dockerlogin
---
apiVersion: v1
kind: Service
metadata:
  name: iviaruntims
spec:
  ports:
    - port: 9443
      name: iviaruntims
      protocol: TCP
  selector:
    app: iviaruntime
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: libldapv
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50M
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: __vname__
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50M
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: libsecauthorityv
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openldapa
  labels:
    app: openldapa
spec:
  selector:
    matchLabels:
      app: openldapa
  replicas: 1
  template:
    metadata:
      labels:
        app: openldapa
    spec:
      volumes:
        - name: libldapv
          persistentVolumeClaim:
            claimName: libldapv
        - name: __vname__
          persistentVolumeClaim:
            claimName: __vname__
        - name: libsecauthorityv
          persistentVolumeClaim:
            claimName: libsecauthorityv
        - name: openldap-keys
          secret:
            secretName: openldap-keys
      containers:
        - name: openldapc
          image: icr.io/isva/verify-access-openldap:10.0.6.0
          livenessProbe:
            tcpSocket:
              port: 636
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 636
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 636
          env:
            - name: LDAP_DOMAIN
              value: ibm.com
            - name: LDAP_ADMIN_PASSWORD
              value: Passw0rd
            - name: LDAP_CONFIG_PASSWORD
              value: Passw0rd
          volumeMounts:
            - mountPath: /var/lib/ldap
              name: libldapv
            - mountPath: /etc/ldap/slapd.d
              name: __vname__
            - mountPath: /var/lib/ldap.secAuthority
              name: libsecauthorityv
            - mountPath: /container/service/slapd/assets/certs
              name: openldap-keys
# This line is needed when running on Kubernetes 1.9.4 or above
          args: [ "--copy-service"]
# useful for debugging startup issues - can run bash, then exec to the container and poke around
#          command: [ "/bin/bash"]
#          args: [ "-c", "while /bin/true ; do sleep 5; done" ]
# Just this line to get debug output from openldap startup
#          args: [ "--loglevel" , "trace","--copy-service"]

apiVersion: v1
kind: Service
metadata:
  name: openldaps
  labels:
    app: openldaps
spec:
  ports:
    - port: 636
      name: ldaps
      protocol: TCP
  selector:
    app: openldapa

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: __vname__
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 250M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresqla
  labels:
    app: postgresqla
spec:
  selector:
    matchLabels:
      app: postgresqla
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresqla
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 70
        fsGroup: 0
      volumes:
        - name: __vname__
          persistentVolumeClaim:
            claimName: __vname__
        - name: postgresql-keys
          secret:
            secretName: postgresql-keys
      containers:
        - name: postgresqlc
          image: icr.io/ivia/ivia-postgresql:11.0.0.0
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: Passw0rd
            - name: POSTGRES_DB
              value: ivia
            - name: POSTGRES_SSL_KEYDB
              value: /var/local/server.pem
            - name: PGDATA
              value: /var/lib/postgresql/data/db-files/
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresqldata
            - mountPath: /var/local
              name: postgresql-keys
# useful for debugging startup issues - can run bash, then exec to the container and poke around
#          command: [ "/bin/bash"]
#          args: [ "-c", "while /bin/true ; do sleep 5; done" ]
---
# for external service access, see https://console.bluemix.net/docs/containers/cs_apps.html#cs_apps_public_nodeport
apiVersion: v1
kind: Service
metadata:
  name: postgresqls
spec:
  ports:
    - port: 5432
      name: postgresqls
      protocol: TCP
  selector:
    app: postgresqla
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iviawrprp1
  labels:
    app: iviawrprp1
spec:
  selector:
    matchLabels:
      app: iviawrprp1
  replicas: 1
  template:
    metadata:
      labels:
        app: iviawrprp1
    spec:
      volumes:
        - name: iviaconfigv
          emptyDir: {}
        - name: iviawrprp1-logs
          emptyDir: {}
      containers:
        - name: iviawrprp1c
          image:  icr.io/ivia/ivia-wrp:11.0.0.0
          ports:
            - containerPort: 9443
          volumeMounts:
            - mountPath: /var/shared
              name: iviaconfigv
            - mountPath: /var/application.logs
              name: __cvname__-logs
          env:
            - name: INSTANCE
              value: rp1
            - name: CONTAINER_TIMEZONE
              value: Asia/Kolkata
            - name: CONFIG_SERVICE_URL
              value: https://iviaconfigs:9443/shared_volume
            - name: CONFIG_SERVICE_USER_NAME
              value: cfgsvc
            - name: CONFIG_SERVICE_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: configreader
                  key: cfgsvcpw
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            failureThreshold: 6
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 2
      imagePullSecrets:
        - name: dockerlogin
---
# for external service access, see https://console.bluemix.net/docs/containers/cs_apps.html#cs_apps_public_nodeport
apiVersion: v1
kind: Service
metadata:
  name: iviawrprp1s
spec:
  type: NodePort
  sessionAffinity: ClientIP
  ports:
    - port: 9443
      name: iviawrprp1s
      protocol: TCP
      nodePort: 30443
  selector:
    app: iviawrprp1
---

 apiVersion: networking.k8s.io/v1
 kind: Ingress
 metadata:
   name: iviawrprp1
   annotations:
     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
     nginx.ingress.kubernetes.io/affinity: "cookie"
 spec:
  tls:
  - hosts:
    - __hostname__
  rules:
  - host: __hostname__
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: iviawrprp1
            port:
              number: 9443
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iviawrprp1
  labels:
    app: iviawrprp1
spec:
  selector:
    matchLabels:
      app: iviawrprp1
  replicas: 1
  template:
    metadata:
      labels:
        app: iviawrprp1
    spec:
      volumes:
        - name: iviaconfigv
          emptyDir: {}
        - name: iviawrprp1-logs
          emptyDir: {}
      containers:
        - name: iviawrprp1c
          image:  icr.io/ivia/ivia-wrp:11.0.0.0
          ports:
            - containerPort: 9443
          volumeMounts:
            - mountPath: /var/shared
              name: iviaconfigv
            - mountPath: /var/application.logs
              name: __cvname__-logs
          env:
            - name: INSTANCE
              value: rp1
            - name: CONTAINER_TIMEZONE
              value: Asia/Kolkata
            - name: CONFIG_SERVICE_URL
              value: https://iviaconfigs:9443/shared_volume
            - name: CONFIG_SERVICE_USER_NAME
              value: cfgsvc
            - name: CONFIG_SERVICE_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: configreader
                  key: cfgsvcpw
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            failureThreshold: 6
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 2
      imagePullSecrets:
        - name: dockerlogin
---
# for external service access, see https://console.bluemix.net/docs/containers/cs_apps.html#cs_apps_public_nodeport
apiVersion: v1
kind: Service
metadata:
  name: iviawrprp1s
spec:
  type: NodePort
  sessionAffinity: ClientIP
  ports:
    - port: 9443
      name: iviawrprp1s
      protocol: TCP
      nodePort: 30443
  selector:
    app: iviawrprp1
---

 apiVersion: networking.k8s.io/v1
 kind: Ingress
 metadata:
   name: iviawrprp1
   annotations:
     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
     nginx.ingress.kubernetes.io/affinity: "cookie"
 spec:
  tls:
  - hosts:
    - __hostname__
  rules:
  - host: __hostname__
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: iviawrprp1
            port:
              number: 9443
---
---    
apiVersion: apps/v1
kind: Deployment

metadata:
  name: iviaopa
  labels:
    app: iviaopa
  annotations:
    version: "2.0"
spec:
  selector:
    matchLabels:
      app: iviaopa

  replicas: 1

  template: 
    metadata:
      labels:
        app: iviaopa

    spec:
      volumes:
        
        - name: __vname__
          configMap:
            name: __vname__

      containers:
        - name: iviaopc
        
          # The fully qualified name of the IVIAOP image.
          image: icr.io/ivia/ivia-oidc-provider:24.12
          imagePullPolicy: Always
          # Mount our volumes to the expected configuration directory
          volumeMounts:
            - name: __vname__
              mountPath: /var/isvaop/config

          readinessProbe:
            httpGet:
              path: /healthcheck/ready
              port: 
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 2

          livenessProbe:
            httpGet:
              path: /healthcheck/alive
              port: 
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: iviaops
  labels:
    app: iviaopa
spec:
  ports:
    - port: 
      name: iviaops
      nodePort: 31443
  selector:
    app: iviaopa
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iviadsc
  labels:
    app: iviadsc
spec:
  selector:
    matchLabels:
      app: iviadsc
  replicas: 1
  template:
    metadata:
      labels:
        app: iviadsc
    spec:
      volumes:
        - name: iviaconfigv
          emptyDir: {}
        - name: iviadsc-logs
          emptyDir: {}
      containers:
        - name: iviadscc
          image: icr.io/ivia/ivia-runtime:11.0.0.0
          ports:
            - containerPort: 9443
            - containerPort: 9444
          volumeMounts:
            - mountPath: /var/shared
              name: iviaconfigv
            - mountPath: /var/application.logs
              name: iviadsc-logs
          env:
            - name: INSTANCE
              value: '1'
            - name: CONTAINER_TIMEZONE
              value: Europe/London
            - name: CONFIG_SERVICE_URL
              value: https://iviaconfigs:9443/shared_volume
            - name: CONFIG_SERVICE_USER_NAME
              value: cfgsvc
            - name: CONFIG_SERVICE_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: configreader
                  key: cfgsvcpw
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 2
      imagePullSecrets:
        - name: dockerlogin
---
apiVersion: v1
kind: Service
metadata:
  name: __sname__
spec:
  ports:
    - port: 9443
      name: __sname__-svc
      protocol: TCP
    - port: 9444
      name: __sname__-rep
      protocol: TCP
  selector:
    app: iviadsc
---
