


2889-D57C-0FEB-223A-D801-6177-68A9-069A

[demouser@centos ~]$ docker exec -ti openldap bash
root@openldap:/# ldapsearch -H ldaps://localhost:636 -D cn=admin,dc=ibm,dc=com -w Passw0rd -b dc=ibm,dc=com objectclass=*


export JAVA_HOME=/app/jdk
export CATALINA_HOME=/app/tomcat
export MAVEN_HOME=/app/maven
minikube dashboard  --url


minikube addons disable ingress
minikube delete
docker network create --driver=bridge --subnet=192.168.50.0/24 --gateway=192.168.50.1 minikube
minikube addons disable ingress
minikube start --driver=docker --network minikube
kubectl cluster-info
minikube addons enable ingress
/iviadep/ivia/kubernetes/create-secrets.sh 

docker pull icr.io/isva/verify-access-openldap:10.0.6.0_IF1
docker pull icr.io/ivia/ivia-postgresql:11.0.0.0
docker pull icr.io/ivia/ivia-dsc:11.0.0.0
docker pull icr.io/ivia/ivia-wrp:11.0.0.0
docker pull  icr.io/ivia/ivia-runtime:11.0.0.0
docker pull  icr.io/ivia/ivia-config:11.0.0.0
docker pull icr.io/ivia/ivia-oidc-provider:24.12 

$ kubectl create -f /iviadep/ivia/kubernetes/ivia-minikube.yaml
minikube addons enable metrics-server

minikube dashboard  --url


sudo usermod -a -G libvirt $(whoami)
   16  sudo vi /etc/libvirt/libvirtd.conf
   17  sudo systemctl restart libvirtd.service
   18  wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
   19  chmod +x minikube-linux-amd64
   20  sudo mv minikube-linux-amd64 /usr/local/bin/minikube
   21  minikube version
   22  curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
   23  chmod +x kubectl
   24  sudo mv kubectl  /usr/local/bin/
   25  kubectl version --client -o json
   26  minikube start
   27  sudo yum -y install libvirt qemu-kvm virt-install virt-top libguestfs-tools bridge-utils
   28  sudo systemctl stop libvirtd
   29  sudo systemctl status libvirtd
   30  sudo systemctl start libvirtd
   31  sudo systemctl status libvirtd
   32  minikube start
   33  podman 
   34  minikube start
   35  minikube config set rootless true
   36  minikube start


101   sudo dnf -y install dnf-plugins-core
  102   sudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  103  sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  104   sudo systemctl enable --now docker


ibmcloud login --sso
bmcloud cr region-set global
bx target -r global
ibmcloud plugin install container-registry
ibmcloud cr images --restrict ivia/ivia-wrp

docker pull icr.io/ivia/ivia-wrp:11.0.0.0
docker pull icr.io/ivia/ivia-oidc-provider:25.01
docker pull 	icr.io/ivia/ivia-dsc:11.0.0.0
docker pull icr.io/ivia/ivia-oidc-provider:25.01


docker save icr.io/ivia/ivia-wrp:11.0.0.0 | gzip > ivia-wrp.tar.gz


icr.io/ivia/ivia-config                11.0.0.0   285904605e45   ivia        1 month ago   846 MB   -
icr.io/ivia/ivia-digital-credentials   24.12      dbdce8a2410f   ivia        1 month ago   203 MB   -
icr.io/ivia/ivia-digital-credentials   latest     dbdce8a2410f   ivia        1 month ago   203 MB   -
icr.io/ivia/ivia-dsc                   11.0.0.0   7e8785058e3f   ivia        1 month ago   195 MB   -
icr.io/ivia/ivia-oidc-provider         24.12      3ecf46913580   ivia        1 month ago   194 MB   -
icr.io/ivia/ivia-oidc-provider         25.01      7c4e15d5ab37   ivia        1 week ago    194 MB   -
icr.io/ivia/ivia-oidc-provider         25.01.0    7c4e15d5ab37   ivia        1 week ago    194 MB   -
icr.io/ivia/ivia-postgresql            11.0.0.0   81197033a806   ivia        1 month ago   113 MB   -
icr.io/ivia/ivia-runtime               11.0.0.0   223eb29c1b45   ivia        1 month ago   582 MB   -
icr.io/ivia/ivia-snapshotmgr           11.0.0.0   7f9b7e91968e   ivia        1 month ago   19 MB    -
icr.io/ivia/ivia-wrp                   11.0.0.0   4424895e4800   ivia        1 month ago   246 MB   -

  WGAWA1000E Failed to verify the SSL connection to the configuration snapshot service.

CONFIG_SERVICE_TLS_CACERT=disabled


        - name: CONFIG_SERVICE_TLS_CACERT
               value: file:/path/to/bundle_ca.pem
			   
			   
docker pull icr.io/isva/verify-access-openldap:10.0.6.0_IF1
docker pull icr.io/ivia/ivia-postgresql:11.0.0.0
docker pull icr.io/ivia/ivia-dsc:11.0.0.0
docker pull icr.io/ivia/ivia-wrp:11.0.0.0
docker pull  icr.io/ivia/ivia-runtime:11.0.0.0
docker pull  icr.io/ivia/ivia-config:11.0.0.0
docker pull icr.io/ivia/ivia-oidc-provider:24.12 


docker run -d --name openldap icr.io/isva/verify-access-openldap:10.0.6.0_IF1


docker run -d -p 127.0.0.2:1636:636 --name openldap icr.io/isva/verify-access-openldap:10.0.6.0_IF1


iviaconfig-74c589d89b-7k9kl    1/1     Running             0                76m
iviadsc-7dfccc8694-lb26l       0/1     CrashLoopBackOff    18 (2m2s ago)    76m
iviaop-5644c56ddd-fb84n        0/1     ContainerCreating   0                76m
iviaruntime-85749c784f-pdz6l   0/1     CrashLoopBackOff    18 (2m29s ago)   76m
iviawrprp1-579d7fc844-kfbqw    0/1     CrashLoopBackOff    19 (74s ago)     76m
openldap-7d6fbc4f87-lxzln      1/1     Running             0                76m
postgresql-74c7cb4f78-h5lf9    1/1     Running             0                76m


sivaperumal@localhost:~/ivia$ kubectl delete deployment iviawrprp1
deployment.apps "iviawrprp1" deleted
sivaperumal@localhost:~/ivia$ kubectl get deployment
NAME          READY   UP-TO-DATE   AVAILABLE   AGE
iviaconfig    1/1     1            1           82m
iviadsc       0/1     1            0           82m
iviaop        0/1     1            0           82m
iviaruntime   0/1     1            0           82m
openldap      1/1     1            1           82m
postgresql    1/1     1            1           82m


 
 kubectl delete deployment iviawrprp1
 kubectl delete deployment iviaconfig 
 kubectl delete deployment iviadsc
 kubectl delete deployment iviaop
 kubectl delete deployment openldap
 kubectl delete deployment iviaruntime
 kubectl delete deployment postgresql
 kubectl delete deployment ldaplib
 kubectl delete deployment ldapslapd 
 kubectl delete deployment ldapsecauthority
 kubectl delete deployment postgresqldata
 kubectl delete deployment iviaconfig
 kubectl delete deployment iviaruntime
 kubectl delete deployment postgresql



kubectl get pods | grep ivia
 kubectl delete pod  iviawrp


docker exec openldap ldapsearch -H ldaps://localhost:636 -D cn=admin,dc=example,dc=org -w admin -b dc=example,dc=org objectclass=*

172.17.0.2/16

docker exec openldap ldapsearch -H ldaps://172.17.0.2:636 -D cn=admin,dc=example,dc=org -w admin -b dc=example,dc=org objectclass=*
docker exec openldap ldapsearch -H ldaps://127.0.0.2:636 -D cn=admin,dc=example,dc=org -w admin -b dc=example,dc=org objectclass=*



Error from server (AlreadyExists): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": persistentvolumeclaims "ldaplib" already exists
Error from server (AlreadyExists): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": persistentvolumeclaims "ldapslapd" already exists
Error from server (AlreadyExists): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": persistentvolumeclaims "ldapsecauthority" already exists
Error from server (AlreadyExists): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": persistentvolumeclaims "postgresqldata" already exists
Error from server (AlreadyExists): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": persistentvolumeclaims "iviaconfig" already exists
Error from server (AlreadyExists): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": services "openldap" already exists
Error from server (AlreadyExists): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": services "postgresql" already exists
Error from server (AlreadyExists): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": services "iviaconfig" already exists
Error from server (Invalid): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": Service "iviawrprp1" is invalid: spec.ports[0].nodePort: Invalid value: 30443: provided port is already allocated
Error from server (AlreadyExists): error when creating "verify-access-container-deployment/kubernetes/ivia-minikube.yaml": services "iviaruntime" already exists
error parsing verify-access-container-deployment/kubernetes/ivia-minikube.yaml: error converting YAML to JSON: yaml: line 19: mapping values are not allowed in this context


kubectl create -f verify-access-container-deployment/kubernetes/ivia-minikube.yaml

kubectl  apply -f verify-access-container-deployment/kubernetes/ivia-minikube.yaml

https://lmi.iamlab.ibm.com 
https://www.iamlab.ibm.com
kubectl delete pods --all
kubectl delete pvc openldap
kubectl delete pvc ldaplib
kubectl delete pvc ldapsecauthority
kubectl delete pvc postgresqldata
kubectl delete pvc iviaconfig

kubectl delete pods --all
kubectl delete pvc --grace-period=0 --force --namespace openldap ldapslapd ldaplib ldapsecauthority postgresqldata iviaconfig
kubectl delete pods --all
kubectl delete deploy iviaconfig iviadsc iviaop iviaruntime iviawrprp1 openldap postgresql iviaop
kubectl delete deploy iviaruntime iviaconfig iviawrprp1 postgresql
kubectl delete deploy  iviaop
kubectl delete pods  iviaop

kubectl delete deploy iviaruntime iviaconfig iviawrprp1 postgresql

iviaconfig    1/1     1            1           16m
iviaruntime   0/1     1            0           16m
iviawrprp1    0/1     1            0           16m
openldap      1/1     1            1           16m
postgresql    1/1     1            1           16m

https://www.iamlab.ibm.com/iviaop/oauth2/.well-known/openid-configuration

 https://ftp.postgresql.org/pub/pgadmin/pgadmin4/yum/fedora/fedora-41-x86_64/pgadmin4-8.13-1.fc41.noarch.rpm
sudo yum insatall https://download.postgresql.org/pub/repos/yum/reporpms/EL-10-x86_64/pgdg-redhat-repo-latest.noarch.rpm
https://myisam:30443/mga/sps/authsvc?PolicyId=urn:ibm:security:authentication:asf:password_eula


psql -U postgres -h postgresql -p 5432 -d ivia
psql -U postgres -h 10.244.0.151 -p 5432 -d ivia

docker exec -it b5f2039251e1 bash

psql -h 10.244.0.151 -p 5432 -U postgres

docker run --rm -P -p 127.0.0.1:5432:5432 -e POSTGRES_PASSWORD="Passw0rd" --name pg postgres:alpine


$ docker run -d -p 5432:5432 --name postgresql-56f6d6ff5d-km99l -e POSTGRES_PASSWORD=Passw0rd postgres


docker run --name postgresql -e POSTGRES_PASSWORD=Passw0rd  -p 5432:5432 postgres

docker rm 17873f7da7be
docker stop 17873f7da7be


kubectl get pod -o wide


curl -LO https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64


[rsp-header-names:/mga]
x-frame-options = SAMEORIGIN
content-security-policy = frame-ancestors 'none'
x-content-type-options = {nosniff
x-xss-protection = 1

Or, you can optionally set those globally for all responses like :

[rsp-header-names]
x-frame-options = SAMEORIGIN
content-security-policy = frame-ancestors 'none'
x-content-type-options = {nosniff
x-xss-protection = 1

ldap command:



dn: uid=test2,dc=ibm,dc=com
changetype: add
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
cn: test2
sn: perumal
mail: test2@sivapoc.com
uid: test2


container: 

slapcat > /home/user.ldif

docker cp useradd.ldif openldap:/home/useradd.ldif

ldapadd -x -H ldaps://localhost:636 -D cn=admin,dc=ibm,dc=com -w Passw0rd -f useradd.ldif 
ldapsearch -H ldaps://localhost:636 -D cn=admin,dc=ibm,dc=com -w Passw0rd -b dc=ibm,dc=com objectclass=*
ldapsearch -H ldaps://localhost: -D cn=admin,dc=ibm,dc=com -w Passw0rd -b dc=ibm,dc=com objectclass=*


 docker exec openldap ldapsearch -x -H ldaps://openldap -b dc=ibm,dc=com -D cn=admin,dc=ibm,dc=com -w Passw0rd


docker run --name phpldapadmin   -e CONTAINER_TIMEZONE=Europe/London -e ADMIN_PWD=Passw0rd -p 127.0.0.4:10080:80 -p 127.0.0.4:10443:443 --hostname phpldapadmin-service --link openldap:127.0.0.2 --env PHPLDAPADMIN_LDAP_HOSTS=openldap   --network ivia --detach osixia/phpldapadmin:latest


docker run --link phpldapadmin:openldap --link phpldapadmin:db -it --net phpldapadmin worker 



docker run -d --name phpldapadmin -e PHPLDAPADMIN_LDAP_HOSTS=openldap -e PHPLDAPADMIN_PORT=636 -p 8080:80 ivia --detach osixia/phpldapadmin:latest



docker run -d --name phpmyadmin -e PMA_ARBITRARY=1 -p 8080:80 phpmyadmin  --network ivia --detach osixia/phpldapadmin:latest




phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "8080:80"
    depends_on:
      - openldap
	  
	  
	  docker run -d --name phpldapadmin -e PMA_ARBITRARY=1 -p 8080:80  osixia/phpldapadmin:latest --network ivia

	  
docker run -t -d --restart always -v phpldapadmin:/var/shared --hostname phpldapadmin --name phpldapadmin -e CONTAINER_TIMEZONE=Europe/London -e ADMIN_PWD=Passw0rd -p 127.0.0.:10080:80  --env PHPLDAPADMIN_LDAP_HOSTS=openldap phpldapadmin_https=false --network ivia osixia/phpldapadmin:latest



docker run --name phpldapadmin -p 127.0.0.10:10080:80 -p 127.0.0.10:10443:443 --hostname phpldapadmin-service --link openldap-server:openldap --env PHPLDAPADMIN_LDAP_HOSTS=openldap phpldapadmin_https=false --depends_on openldap --network ivia --detach osixia/phpldapadmin:latest


docker run --name phpldapadmin -p 10080:80 -p 10443:443 --hostname phpldapadmin-service --link openldap:openldap --env PHPLDAPADMIN_LDAP_HOSTS=openldap --depends_on:openldap --network ivia --detach osixia/phpldapadmin:latest


#!/bin/bash -e
docker run --name ldap-service --hostname ldap-service --detach osixia/openldap:1.1.8
docker run --name phpldapadmin-service --hostname phpldapadmin-service --link ldap-service:ldap-host --env PHPLDAPADMIN_LDAP_HOSTS=ldap-host --detach osixia/phpldapadmin:0.9.0

PHPLDAP_IP=$(docker inspect -f "{{ .NetworkSettings.IPAddress }}" phpldapadmin-service)

echo "Go to: https://$PHPLDAP_IP"
echo "Login DN: cn=admin,dc=example,dc=org"
echo "Password: admin"



docker -D run  --name phpldapadmin -p 127.0.0.10:10080:80 -p 127.0.0.10:10443:443 --hostname phpldapadmin-service --link openldap-server:ldaps://localhost:636 --env PHPLDAPADMIN_LDAP_HOSTS=ldaps://localhost:636 --network ivia --detach osixia/phpldapadmin:latest 


 docker -D run  --name phpldapadmin -p 127.0.0.10:10080:80 -p 127.0.0.10:10443:443 --hostname phpldapadmin --link openldap-server:127.0.0.2 --env PHPLDAPADMIN_LDAP_HOSTS=127.0.0.2 --network ivia --detach osixia/phpldapadmin:latest  --loglevel debug
 
 
   docker run -D run  --name phpldapadmin -p 127.0.0.10:10080:80 -p 127.0.0.10:10443:443 --hostname phpldapadmin --link openldap-server:127.0.0.2 --env PHPLDAPADMIN_LDAP_HOSTS="#PYTHON2BASH:[{'openldap': [{'server': [{'tls': True}]},{'login': [{'bind_id': 'cn=admin,dc=ibm,dc=com'}]}]}" --detach osixia/phpldapadmin:latest
   
   
   
   
   docker cp phpldapadmin:var/www/phpldapadmin/config/config.php .
 .
   
$servers->setValue('server','name','ldaps://openldap');
$servers->setValue('server','base', array('dc=ibm,dc=com'));
$servers->setValue('login','bind_id','cn=admin,dc=ibm,dc=com');
$config->custom->appearance['hide_template_warning'] = true;



minikube stop
minikube delete
minikube delete --all --purge



 echo "siva ALL=(ALL) NOPASSWD: /usr/bin/podman" | sudo tee /etc/sudoers.d/linuxtechi