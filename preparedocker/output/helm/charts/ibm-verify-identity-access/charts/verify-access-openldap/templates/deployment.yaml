{{- include "sch.config.init" (list . "iviaopenldap.sch.chart.config.values") -}}
{{- $pvcName := "dataPVC" -}}

{{- if .Values.container.enabled }}

#
# This file contains the main deployment definition used by the helm chart
# installation.
#

apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ template "openldap.name" . }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}

spec:
  selector:
    matchLabels:
      app: {{ template "openldap.name" . }}
      chart: {{ .Chart.Name }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}

  template:
    metadata:
      labels:
        # XXX: For some reason the 'app' label needs to be the fully qualified
        #      application name else the helm_test command fails because we
        #      can't resolve the application name.  This should be revisited
        #      at some point in the future so that we can make use of the
        #      sch.metadata.labels.standard tag.
        app: {{ template "openldap.name" . }}
        chart: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}

      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}

    spec:

      hostNetwork:    false
      hostPID:        false
      hostIPC:        false

      affinity:
{{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "openldap.name" . }}
              topologyKey: "kubernetes.io/hostname"

      containers:
      - name:  {{ template "openldap.name" . }}

        securityContext:
          privileged:               false
          readOnlyRootFilesystem:   false
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - SETUID
            - SETGID

        image: "{{ .Values.global.image.ldaprepository }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.global.image.pullPolicy | quote }}
        env:
        - name: LDAP_DOMAIN
          value: {{ template "openldap.domain" . | quote }}
        - name: LDAP_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "admin.secret" . }}
              key: {{ template "admin.secret.key" . }}
        - name: LDAP_CONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "admin.secret" . }}
              key: {{ template "admin.secret.key" . }}

        args: ["--copy-service"]

        livenessProbe:
          tcpSocket:
            port: 636
          initialDelaySeconds: 15
          periodSeconds: 20

        readinessProbe:
          tcpSocket:
            port: 636
          initialDelaySeconds: 5
          periodSeconds: 10

        ports:
        - name: {{ .sch.chart.config.servicename }}
          containerPort: 636

        resources:
{{ toYaml .Values.resources | indent 10 }}

        volumeMounts:
        - name: {{ template "openldap.pvc.name" . }}
          mountPath: /etc/ldap/slapd.d
          subPath:   openldap.slapd
        - name: {{ template "openldap.pvc.name" . }}
          mountPath: /var/lib/ldap
          subPath:   openldap.ldap
        - name: {{ template "openldap.pvc.name" . }}
          mountPath: /var/lib/ldap.secAuthority
          subPath:   openldap.secauthority

        {{- if .Values.container.keySecretName }}
        - name: {{ .Release.Name }}-openldap-keys
          mountPath: /container/service/slapd/assets/certs
        {{- end}}

      volumes:
        - name: {{ template "openldap.pvc.name" . }}
        {{- if .Values.global.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "openldap.pvc.name" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.container.keySecretName }}
        - name: {{ .Release.Name }}-openldap-keys
          secret:
            secretName: {{ .Values.container.keySecretName }}
        {{- end }}
{{- end }}
