apiVersion: v1
kind: Template
labels:
  template: verify-identity-access-reverse-proxy
metadata:
  creationTimestamp: null
  name: verify-identity-access-reverse-proxy
  annotations:
    openshift.io/display-name: IBM Verify Identity Access Reverse Proxy
    iconClass: icon-sso
    description: IBM Verify Identity Access Reverse Proxy
    openshift.io/long-description: This template deploys an IBM Verify Identity Access Reverse Proxy
      instance.  This template can be deployed multiple times to create multiple Reverse Proxies.
    openshift.io/documentation-url: https://ibm.biz/verifyaccesscontainers
    openshift.io/provider-display-name: IBM Verify Identity Access
    openshift.io/support-url: https://ibm.biz/iamcommunity
    tags: ibm, verifyaccess, isam, ivia, ivia
message: |-

  Application Name: ${CORE_APP_NAME}-${INSTANCE_NAME}

  Instance Name: ${INSTANCE_NAME}
  An instance with this name must be configured in the config service.

  The following service has been created in your project:
    - ${SERVICE_NAME}

  Route URL: https://${DNS_NAME}

  Secret containing REST credentials: ${CORE_APP_NAME}-core
  Secret containing Config Admin credentials: ${CORE_APP_NAME}-lmi

objects:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${APP_NAME}-wrp
    name: ${APP_NAME}-wrp
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: '${APP_NAME}-wrp:latest'
    source:
      binary: {}
      type: Binary
    strategy:
      dockerStrategy: {}
      type: Docker
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APP_NAME}-wrp
    name: ${APP_NAME}-wrp
  spec:
    lookupPolicy:
      local: false
    tags:
      - annotations: null
        from:
          kind: DockerImage
          name: 'icr.io/ivia/ivia-wrp:${IVIA_VERSION}'
        importPolicy: {}
        name: base
        referencePolicy:
          type: Source
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${CORE_APP_NAME}-${INSTANCE_NAME}
      name: ${CORE_APP_NAME}-${INSTANCE_NAME}
    name: ${CORE_APP_NAME}-${INSTANCE_NAME}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: ${CORE_APP_NAME}-${INSTANCE_NAME}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          from:
            kind: ImageStreamTag
            name: ${CORE_APP_NAME}-wrp:latest
          containerNames:
            - ${CORE_APP_NAME}-${INSTANCE_NAME}
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${CORE_APP_NAME}-${INSTANCE_NAME}
          app: ${CORE_APP_NAME}-${INSTANCE_NAME}
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        securityContext:
          runAsNonRoot: true
          runAsUser:    6000
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ${CORE_APP_NAME}-${INSTANCE_NAME}
                topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: SERVICE
            value: webseal
          - name: INSTANCE
            value: ${INSTANCE_NAME}
          - name: SNAPSHOT
            value: baked.snapshot
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          image: ${CORE_APP_NAME}:latest
          imagePullPolicy: IfNotPresent
          name: ${CORE_APP_NAME}-${INSTANCE_NAME}
          ports:
          - containerPort: 9443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${CORE_APP_NAME}-${INSTANCE_NAME}-logs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${CORE_APP_NAME}-${INSTANCE_NAME}-logs
          emptyDir: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: ${CORE_APP_NAME}-${INSTANCE_NAME}
    labels:
      app: ${CORE_APP_NAME}-${INSTANCE_NAME}
  spec:
    host: ${DNS_NAME}
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: ${SERVICE_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${SERVICE_NAME}
    labels:
      app: ${CORE_APP_NAME}-${INSTANCE_NAME}
  spec:
    ports:
    - name: https
      port: 9443
      protocol: TCP
      targetPort: 9443
    selector:
      app: ${CORE_APP_NAME}-${INSTANCE_NAME}
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - displayName: Core Application Name
    description: The name of the core application (omit -core).  This must match what was
      configured when creating the core application.
    name: CORE_APP_NAME
    value: verifyidentityaccess
  - displayName: Instance name
    description: This must match an instance configured in the configuration service.
    name: INSTANCE_NAME
    value: rp1
  - displayName: Service Name
    description: The name of the Service. Also used as the hostname for connections within the cluster.
    name: SERVICE_NAME
    value: iviawrprp1
  - displayName: Fully Qualified DNS Name for Route
    description: A DNS or hosts entry must associate this hostname with IP of OpenShift router.
    name: DNS_NAME
    value: www.iamlab.ibm.com
  - displayName: Timezone
    description: The timezone for message logging (e.g. Europe/London)
    name: TIMEZONE
    value: Etc/UTC
  - displayName: Service Account
    description: This is the (existing) Service Account for running the pods.
    name: SERVICE_ACCOUNT
    value: verifyaccess
