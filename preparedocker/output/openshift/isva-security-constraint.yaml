
# The minimum security context constraints which are required to run
# the Verify Identity Access container.  We cannot use the 'restricted' security
# constraint as we need additional capabilities which would otherwise
# be denied to the container.  The 'anyuid' security constraint may
# be used, but it allows additional capabilities which are not
# required by the container.

kind: SecurityContextConstraints
apiVersion: security.openshift.io/v1

# The name and description for the security context constraint to be
# created.
metadata:
  name: verifyaccess
  annotations:
    kubernetes.io/description: The verifyaccess SCC allows the container to run
                 as any non-root user.

# The following capabilities are not required.
allowHostDirVolumePlugin: false
allowHostIPC:             false
allowHostNetwork:         false
allowHostPID:             false
allowHostPorts:           false
allowPrivilegedContainer: false
readOnlyRootFilesystem:   false

# Setting priority to less than 10 to avoid issues with oauth-authentication. (https://access.redhat.com/solutions/4727461)
priority: 5

# The Verify Access containers needs to be run as a 'custom' user, but do
# not need to run as the root user.
runAsUser:
  type: MustRunAsNonRoot
seLinuxContext:
  type: MustRunAs
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny

# The following volumes are required by the Verify Access containers.
volumes:
- configMap
- emptyDir
- projected
- secret
- downwardAPI
- persistentVolumeClaim

# By default we drop all capabilities and then only add back in the
# capabilities which are required by the Verify Access containers.
requiredDropCapabilities:
- ALL

# The capabilities which are required by the Verify Access containers.
allowedCapabilities:
- CHOWN
- DAC_OVERRIDE
- FOWNER
- KILL
- NET_BIND_SERVICE
- SETFCAP
- SETGID
- SETUID

defaultAddCapabilities:
- CHOWN
- DAC_OVERRIDE
- FOWNER
- KILL
- NET_BIND_SERVICE
- SETFCAP
- SETGID
- SETUID
